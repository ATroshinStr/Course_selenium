
# импорт вебдрайвер и времени
from selenium import webdriver
import time 
import math

#Создаем переменную с ссылкой на страницу
link = ""
#Создаем переменную, в котором путь до вебдрайвера
browser = webdriver.Chrome('/Users/alexnder/Documents/python/chromedriver')
#Получение ссылки для взаимодействие с вебдрайвером
browser.get(link)

#Выход из браузера
#finally:
    #driver.quit()    

///////////////////////////////////////////////

 # Поиск по обязательному полю
 #find_element_by_css_selector('.form-control.first[required]')

///////////////////////////////////////////////

# Скролл до элемента, если true - после скролла элемент оказывается в области видимости
# "return arguments[0].scrollIntoView(true);"

///////////////////////////////////////////////

import os
from selenium import webdriver
from selenium.webdriver.common.by import By
link = "http://suninjuly.github.io/file_input.html"
browser = webdriver.Chrome()
browser.get(link)
current_dir = os.path.abspath(os.path.dirname(__file__))
file_name = "file_example.txt"
file_path = os.path.join(current_dir, file_name)
element = browser.find_element(By.CSS_SELECTOR, "[type='file']")
element.send_keys(file_path)

///////////////////////////////////////////////

Переключение на другую вкладку
browser.switch_to.window(window_name)

Переход на вторую вкладку
new_window = browser.window_handles[1]

Сохранение первой вкладки
first_window = browser.window_handles[0]

///////////////////////////////////////////////

# говорим WebDriver искать каждый элемент в течение 5 секунд (Не явное ожидание)
browser.implicitly_wait(5)

///////////////////////////////////////////////

Подключение явного ожидания 

from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium import webdriver

browser = webdriver.Chrome()

browser.get("http://suninjuly.github.io/wait2.html")

# говорим Selenium проверять в течение 5 секунд, пока кнопка не станет кликабельной
button = WebDriverWait(browser, 5).until(
        EC.element_to_be_clickable((By.ID, "verify"))
    )
button.click()
message = browser.find_element_by_id("verify_message")

assert "successful" in message.text


https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.support.expected_conditions

# говорим Selenium проверять в течение 5 секунд пока кнопка станет неактивной
button = WebDriverWait(browser, 5).until_not(
        EC.element_to_be_clickable((By.ID, "verify"))
    )

///////////////////////////////////////////////

catalog_text = self.catalog_link.text # считываем текст и записываем его в переменную
assert catalog_text == "Каталог", \
    f"Wrong language, got {catalog_text} instead of 'Каталог'"  

///////////////////////////////////////////////